<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>229, 17</value>
  </metadata>
  <metadata name="colorDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>316, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>437, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>62</value>
  </metadata>
</root>